{"version":3,"file":"core.cjs.development.js","sources":["../src/components/Accessibility/defaults.ts","../src/store/actions.ts","../src/utilities/other/getValueIndex.ts","../src/utilities/other/noop.ts","../src/utilities/other/omit.ts","../src/store/context.ts","../src/utilities/coordinates/constants.ts","../src/utilities/coordinates/distanceBetweenPoints.ts","../src/utilities/event/isTouchEvent.ts","../src/utilities/event/isMouseEvent.ts","../src/utilities/coordinates/getEventCoordinates.ts","../src/utilities/coordinates/getRelativeTransformOrigin.ts","../src/utilities/algorithms/closestCenter.ts","../src/utilities/rect/adjustScale.ts","../src/utilities/rect/getRectDelta.ts","../src/utilities/rect/rectAdjustment.ts","../src/utilities/scroll/isScrollable.ts","../src/utilities/scroll/getScrollableAncestors.ts","../src/utilities/scroll/getScrollableElement.ts","../src/utilities/scroll/getScrollCoordinates.ts","../src/types/direction.ts","../src/utilities/scroll/getScrollPosition.ts","../src/utilities/scroll/documentScrollingElement.ts","../src/utilities/scroll/getScrollDirectionAndSpeed.ts","../src/utilities/scroll/getScrollElementRect.ts","../src/utilities/scroll/getScrollOffsets.ts","../src/utilities/rect/getRect.ts","../src/utilities/rect/isViewRect.ts","../src/utilities/algorithms/closestCorners.ts","../src/utilities/algorithms/rectIntersection.ts","../src/utilities/document/getOwnerDocument.ts","../src/utilities/document/getWindow.ts","../src/store/reducer.ts","../src/hooks/monitor/useDndMonitor.ts","../src/components/Accessibility/Accessibility.tsx","../src/hooks/utilities/useAutoScroller.ts","../src/hooks/utilities/useCachedNode.ts","../src/hooks/utilities/useCombineActivators.ts","../src/hooks/utilities/useData.ts","../src/hooks/utilities/useLayoutMeasuring.ts","../src/hooks/utilities/useScrollOffsets.ts","../src/hooks/utilities/useScrollableAncestors.ts","../src/hooks/utilities/useSyntheticListeners.ts","../src/hooks/utilities/useRect.ts","../src/sensors/useSensor.ts","../src/sensors/useSensors.ts","../src/sensors/utilities/Listeners.ts","../src/sensors/utilities/getEventListenerTarget.ts","../src/sensors/utilities/hasExceededDistance.ts","../src/sensors/keyboard/types.ts","../src/sensors/keyboard/defaults.ts","../src/sensors/keyboard/KeyboardSensor.ts","../src/sensors/pointer/AbstractPointerSensor.ts","../src/sensors/pointer/PointerSensor.ts","../src/sensors/mouse/MouseSensor.ts","../src/sensors/touch/TouchSensor.ts","../src/modifiers/applyModifiers.ts","../src/components/DndContext/DndContext.tsx","../src/hooks/useDraggable.ts","../src/hooks/useDndContext.ts","../src/hooks/useDroppable.ts","../src/components/DragOverlay/hooks/useDerivedTransform.ts","../src/components/DragOverlay/hooks/useDropAnimation.ts","../src/components/DragOverlay/DragOverlay.tsx"],"sourcesContent":["import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const screenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart(id) {\n    return `Picked up draggable item ${id}.`;\n  },\n  onDragOver(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was moved over droppable area ${overId}.`;\n    }\n\n    return `Draggable item ${id} is no longer over a droppable area.`;\n  },\n  onDragEnd(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was dropped over droppable area ${overId}`;\n    }\n\n    return `Draggable item ${id} was dropped.`;\n  },\n  onDragCancel(id) {\n    return `Dragging was cancelled. Draggable item ${id} was dropped.`;\n  },\n};\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n    };\n","export const getMaxValueIndex = (array: number[]) =>\n  getValueIndex(array, (value, tracked) => value > tracked);\n\nexport const getMinValueIndex = (array: number[]) =>\n  getValueIndex(array, (value, tracked) => value < tracked);\n\n/**\n * Returns the index of the smallest number in an array of numbers\n */\nexport function getValueIndex(\n  array: number[],\n  comparator: (value: number, tracked: number) => boolean\n) {\n  if (array.length === 0) {\n    return -1;\n  }\n\n  let tracked = array[0];\n  let index = 0;\n\n  for (var i = 1; i < array.length; i++) {\n    if (comparator(array[i], tracked)) {\n      index = i;\n      tracked = array[i];\n    }\n  }\n\n  return index;\n}\n","export function noop(..._args: any) {}\n","export function omit<T>(id: string, elements: Record<string, T>) {\n  const {[id]: _, ...other} = elements;\n\n  return other;\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport type {DndContextDescriptor} from './types';\n\nexport const Context = createContext<DndContextDescriptor>({\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  activeNodeClientRect: null,\n  activators: [],\n  ariaDescribedById: {\n    draggable: '',\n  },\n  containerNodeRect: null,\n  dispatch: noop,\n  draggableNodes: {},\n  droppableRects: new Map(),\n  droppableContainers: {},\n  over: null,\n  overlayNode: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  recomputeLayouts: noop,\n  windowRect: null,\n  willRecomputeLayouts: false,\n});\n","import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","export function isTouchEvent(event: Event): event is TouchEvent {\n  return window?.TouchEvent && event instanceof TouchEvent;\n}\n","export function isMouseEvent(event: Event): event is MouseEvent {\n  return (\n    (window?.MouseEvent && event instanceof MouseEvent) ||\n    event.type.includes('mouse')\n  );\n}\n","import type {Coordinates} from '../../types';\nimport {isMouseEvent, isTouchEvent} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n  };\n}\n","import {getEventCoordinates} from './getEventCoordinates';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  if (event instanceof KeyboardEvent) {\n    return '0 0';\n  }\n\n  const eventCoordinates = getEventCoordinates(event);\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n","import {getMinValueIndex} from '../other';\nimport {distanceBetween} from '../coordinates';\nimport type {Coordinates, LayoutRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = (rects, rect) => {\n  const centerRect = centerOfRectangle(rect, rect.left, rect.top);\n  const distances = rects.map(([_, rect]) =>\n    distanceBetween(centerOfRectangle(rect), centerRect)\n  );\n\n  const minValueIndex = getMinValueIndex(distances);\n\n  return rects[minValueIndex] ? rects[minValueIndex][0] : null;\n};\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {LayoutRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: LayoutRect | null,\n  rect2: LayoutRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import type {Coordinates, ViewRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ViewRect | null,\n  rect2: ViewRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import type {Coordinates, ViewRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustViewRect(\n    viewRect: ViewRect,\n    ...adjustments: Coordinates[]\n  ): ViewRect {\n    return adjustments.reduce<ViewRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n        offsetLeft: acc.offsetLeft + modifier * adjustment.x,\n        offsetTop: acc.offsetTop + modifier * adjustment.y,\n      }),\n      {...viewRect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","export function isScrollable(node: HTMLElement): boolean {\n  const computedStyle = window.getComputedStyle(node);\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return (\n    properties.find((property) => {\n      const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n      return typeof value === 'string' ? overflowRegex.test(value) : false;\n    }) != null\n  );\n}\n","import {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(element: Node | null): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (node instanceof Document && node.scrollingElement != null) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!(node instanceof HTMLElement) || node instanceof SVGElement) {\n      return scrollParents;\n    }\n\n    if (isScrollable(node)) {\n      scrollParents.push(node);\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  return element ? findScrollableAncestors(element.parentNode) : scrollParents;\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM) {\n    return null;\n  }\n\n  if (element === document.scrollingElement || element instanceof Document) {\n    return window;\n  }\n\n  if (element instanceof HTMLElement) {\n    return element;\n  }\n\n  return null;\n}\n","import type {Coordinates} from '../../types';\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  if (element instanceof Window) {\n    return {\n      x: element.scrollX,\n      y: element.scrollY,\n    };\n  }\n\n  return {\n    x: element.scrollLeft,\n    y: element.scrollTop,\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","export function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - scrollingContainer.clientWidth,\n    y: scrollingContainer.scrollHeight - scrollingContainer.clientHeight,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {Direction, ViewRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\nimport {isDocumentScrollingElement} from './documentScrollingElement';\n\ninterface Rect extends Pick<ViewRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ViewRect,\n  {top, left, right, bottom}: Rect,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {clientHeight, clientWidth} = scrollContainer;\n  const finalScrollContainerRect = isDocumentScrollingElement(scrollContainer)\n    ? {\n        top: 0,\n        left: 0,\n        right: clientWidth,\n        bottom: clientHeight,\n        width: clientWidth,\n        height: clientHeight,\n      }\n    : scrollContainerRect;\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: finalScrollContainerRect.height * thresholdPercentage.y,\n    width: finalScrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= finalScrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        ((finalScrollContainerRect.top + threshold.height) - top) /\n          threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= finalScrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        ((finalScrollContainerRect.bottom - threshold.height) - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= finalScrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        ((finalScrollContainerRect.right - threshold.width) - right) /\n          threshold.width\n      );\n  } else if (\n    !isLeft &&\n    left <= finalScrollContainerRect.left + threshold.width\n  ) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        ((finalScrollContainerRect.left + threshold.width) - left) /\n          threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {getScrollCoordinates} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n","import type {Coordinates, ClientRect, LayoutRect, ViewRect} from '../../types';\nimport {getScrollableAncestors, getScrollOffsets} from '../scroll';\nimport {defaultCoordinates} from '../coordinates';\n\nfunction getEdgeOffset(\n  node: HTMLElement | null,\n  parent: (Node & ParentNode) | null,\n  offset = defaultCoordinates\n): Coordinates {\n  if (!node || !(node instanceof HTMLElement)) {\n    return offset;\n  }\n\n  const nodeOffset = {\n    x: offset.x + node.offsetLeft,\n    y: offset.y + node.offsetTop,\n  };\n\n  if (node.offsetParent === parent) {\n    return nodeOffset;\n  }\n\n  return getEdgeOffset(node.offsetParent as HTMLElement, parent, nodeOffset);\n}\n\nexport function getElementLayout(element: HTMLElement): LayoutRect {\n  const {offsetWidth: width, offsetHeight: height} = element;\n  const {x: offsetLeft, y: offsetTop} = getEdgeOffset(element, null);\n\n  return {\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getBoundingClientRect(\n  element: HTMLElement | Window\n): ClientRect {\n  if (element instanceof Window) {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return {\n      top: 0,\n      left: 0,\n      right: width,\n      bottom: height,\n      width,\n      height,\n      offsetTop: 0,\n      offsetLeft: 0,\n    };\n  }\n\n  const {offsetTop, offsetLeft} = getElementLayout(element);\n  const {\n    width,\n    height,\n    top,\n    bottom,\n    left,\n    right,\n  } = element.getBoundingClientRect();\n\n  return {\n    width,\n    height,\n    top,\n    bottom,\n    right,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getViewRect(element: HTMLElement): ViewRect {\n  const {width, height, offsetTop, offsetLeft} = getElementLayout(element);\n  const scrollableAncestors = getScrollableAncestors(element);\n  const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n  const top = offsetTop - scrollOffsets.y;\n  const left = offsetLeft - scrollOffsets.x;\n\n  return {\n    width,\n    height,\n    top,\n    bottom: top + height,\n    right: left + width,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n","import type {LayoutRect, ViewRect} from '../../types';\n\nexport function isViewRect(entry: LayoutRect | ViewRect): entry is ViewRect {\n  return 'top' in entry;\n}\n","import {getMinValueIndex} from '../other';\nimport {distanceBetween} from '../coordinates';\nimport {isViewRect} from '../rect';\nimport type {LayoutRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\n\nfunction cornersOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + rect.width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + rect.height,\n    },\n    {\n      x: left + rect.width,\n      y: top + rect.height,\n    },\n  ];\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = (entries, target) => {\n  const corners = cornersOfRectangle(target, target.left, target.top);\n\n  const distances = entries.map(([_, entry]) => {\n    const entryCorners = cornersOfRectangle(\n      entry,\n      isViewRect(entry) ? entry.left : undefined,\n      isViewRect(entry) ? entry.top : undefined\n    );\n    const distances = corners.reduce((accumulator, corner, index) => {\n      return accumulator + distanceBetween(entryCorners[index], corner);\n    }, 0);\n\n    return Number((distances / 4).toFixed(4));\n  });\n\n  const minValueIndex = getMinValueIndex(distances);\n\n  return entries[minValueIndex] ? entries[minValueIndex][0] : null;\n};\n","import {getMaxValueIndex} from '../other';\nimport type {LayoutRect, ViewRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nfunction getIntersectionRatio(entry: LayoutRect, target: ViewRect): number {\n  const top = Math.max(target.top, entry.offsetTop);\n  const left = Math.max(target.left, entry.offsetLeft);\n  const right = Math.min(\n    target.left + target.width,\n    entry.offsetLeft + entry.width\n  );\n  const bottom = Math.min(\n    target.top + target.height,\n    entry.offsetTop + entry.height\n  );\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangle that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = (entries, target) => {\n  const intersections = entries.map(([_, entry]) =>\n    getIntersectionRatio(entry, target)\n  );\n\n  const maxValueIndex = getMaxValueIndex(intersections);\n\n  if (intersections[maxValueIndex] <= 0) {\n    return null;\n  }\n\n  return entries[maxValueIndex] ? entries[maxValueIndex][0] : null;\n};\n","export function getOwnerDocument(target: Event['target']) {\n  return target instanceof HTMLElement ? target.ownerDocument : document;\n}\n","import {getOwnerDocument} from './getOwnerDocument';\n\nexport function getWindow(target: Event['target']) {\n  return getOwnerDocument(target).defaultView ?? window;\n}\n","import {omit} from '../utilities';\nimport {Action, Actions} from './actions';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: {},\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: {},\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: {\n            ...state.droppable.containers,\n            [id]: element,\n          },\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, disabled} = action;\n      const element = state.droppable.containers[id];\n\n      if (!element) {\n        return state;\n      }\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: {\n            ...state.droppable.containers,\n            [id]: {\n              ...element,\n              disabled,\n            },\n          },\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id} = action;\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: omit(id, state.droppable.containers),\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {createContext, useContext, useEffect, useRef} from 'react';\n\nimport {Action} from '../../store';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n} from '../../types';\n\nexport interface Arguments {\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface DndMonitorState {\n  type: Action | null;\n  event:\n    | null\n    | DragStartEvent\n    | DragMoveEvent\n    | DragOverEvent\n    | DragEndEvent\n    | DragCancelEvent;\n}\n\nexport const DndMonitorContext = createContext<DndMonitorState>({\n  type: null,\n  event: null,\n});\n\nexport function useDndMonitor({\n  onDragStart,\n  onDragMove,\n  onDragOver,\n  onDragEnd,\n  onDragCancel,\n}: Arguments) {\n  const monitorState = useContext(DndMonitorContext);\n  const previousMonitorState = useRef(monitorState);\n\n  useEffect(() => {\n    if (monitorState !== previousMonitorState.current) {\n      const {type, event} = monitorState;\n\n      switch (type) {\n        case Action.DragStart:\n          onDragStart?.(event as DragStartEvent);\n          break;\n        case Action.DragMove:\n          onDragMove?.(event as DragMoveEvent);\n          break;\n        case Action.DragOver:\n          onDragOver?.(event as DragOverEvent);\n          break;\n        case Action.DragCancel:\n          onDragCancel?.(event as DragCancelEvent);\n          break;\n        case Action.DragEnd:\n          onDragEnd?.(event as DragEndEvent);\n          break;\n      }\n\n      previousMonitorState.current = monitorState;\n    }\n  }, [\n    monitorState,\n    onDragStart,\n    onDragMove,\n    onDragOver,\n    onDragEnd,\n    onDragCancel,\n  ]);\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport type {UniqueIdentifier} from '../../types';\nimport {defaultAnnouncements} from './defaults';\nimport {DndMonitorArguments, useDndMonitor} from '../../hooks/monitor';\n\ninterface Props {\n  announcements?: Announcements;\n  screenReaderInstructions: ScreenReaderInstructions;\n  hiddenTextDescribedById: UniqueIdentifier;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  hiddenTextDescribedById,\n  screenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorArguments>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart(active.id));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove(active.id, over?.id));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver(active.id, over?.id));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd(active.id, over?.id));\n        },\n        onDragCancel({active}) {\n          announce(announcements.onDragCancel(active.id));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  return mounted\n    ? createPortal(\n        <>\n          <HiddenText\n            id={hiddenTextDescribedById}\n            value={screenReaderInstructions.draggable}\n          />\n          <LiveRegion id={liveRegionId} announcement={announcement} />\n        </>,\n        document.body\n      )\n    : null;\n}\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed, defaultCoordinates} from '../../utilities';\nimport type {Coordinates, Direction, ViewRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ViewRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ViewRect[];\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  threshold,\n}: Arguments) {\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({\n    x: 1,\n    y: 1,\n  });\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n\n    return null;\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollDirection = useRef<ScrollDirection>(defaultCoordinates);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrolllContainerRect = scrollableAncestorRects[index];\n\n        if (!scrolllContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrolllContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id !== null ? draggableNodes[id] : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id === null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorHandler} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorHandler,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useRef} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {Data} from '../../store';\n\nexport function useData(data: Data | undefined) {\n  const dataRef = useRef(data);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dataRef.current !== data) {\n      dataRef.current = data;\n    }\n  }, [data]);\n\n  return dataRef;\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getElementLayout} from '../../utilities';\nimport type {DroppableContainers, LayoutRectMap} from '../../store/types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: Partial<LayoutMeasuring> | undefined;\n}\n\nexport enum LayoutMeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum LayoutMeasuringFrequency {\n  Optimized = 'optimized',\n}\n\nexport interface LayoutMeasuring {\n  strategy: LayoutMeasuringStrategy;\n  frequency: LayoutMeasuringFrequency | number;\n}\n\nconst defaultValue: LayoutRectMap = new Map();\n\nexport function useLayoutMeasuring(\n  containers: DroppableContainers,\n  {dragging, dependencies, config}: Arguments\n) {\n  const [willRecomputeLayouts, setWillRecomputeLayouts] = useState(false);\n  const {frequency, strategy} = getLayoutMeasuring(config);\n  const containersRef = useRef(containers);\n  const recomputeLayouts = useCallback(() => setWillRecomputeLayouts(true), []);\n  const recomputeLayoutsTimeoutId = useRef<NodeJS.Timeout | null>(null);\n  const disabled = isDisabled();\n  const layoutRectMap = useLazyMemo<LayoutRectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        willRecomputeLayouts\n      ) {\n        for (let container of Object.values(containers)) {\n          if (!container) {\n            continue;\n          }\n\n          container.rect.current = container.node.current\n            ? getElementLayout(container.node.current)\n            : null;\n        }\n\n        return createLayoutRectMap(containers);\n      }\n\n      return previousValue;\n    },\n    [containers, dragging, disabled, willRecomputeLayouts]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(() => {\n    if (willRecomputeLayouts) {\n      setWillRecomputeLayouts(false);\n    }\n  }, [willRecomputeLayouts]);\n\n  useEffect(\n    function recompute() {\n      if (disabled) {\n        return;\n      }\n\n      requestAnimationFrame(recomputeLayouts);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(\n    function forceRecomputeLayouts() {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        recomputeLayoutsTimeoutId.current !== null\n      ) {\n        return;\n      }\n\n      recomputeLayoutsTimeoutId.current = setTimeout(() => {\n        recomputeLayouts();\n        recomputeLayoutsTimeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, recomputeLayouts, ...dependencies]\n  );\n\n  return {\n    layoutRectMap,\n    recomputeLayouts,\n    willRecomputeLayouts,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case LayoutMeasuringStrategy.Always:\n        return false;\n      case LayoutMeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n\nfunction createLayoutRectMap(\n  containers: DroppableContainers | null\n): LayoutRectMap {\n  const layoutRectMap: LayoutRectMap = new Map();\n\n  if (containers) {\n    for (const container of Object.values(containers)) {\n      if (!container) {\n        continue;\n      }\n\n      const {id, rect, disabled} = container;\n\n      if (disabled || rect.current == null) {\n        continue;\n      }\n\n      layoutRectMap.set(id, rect.current);\n    }\n  }\n\n  return layoutRectMap;\n}\n\nconst defaultLayoutMeasuring: LayoutMeasuring = {\n  strategy: LayoutMeasuringStrategy.WhileDragging,\n  frequency: LayoutMeasuringFrequency.Optimized,\n};\n\nfunction getLayoutMeasuring(\n  layoutMeasuring: Arguments['config']\n): LayoutMeasuring {\n  return layoutMeasuring\n    ? {\n        ...defaultLayoutMeasuring,\n        ...layoutMeasuring,\n      }\n    : defaultLayoutMeasuring;\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: string\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {\n  getBoundingClientRect,\n  getElementLayout,\n  getViewRect,\n} from '../../utilities';\nimport type {LayoutRect} from '../../types';\n\ntype RectFn<T, U> = (element: U) => T;\n\nexport const useClientRect = createUseRectFn(getBoundingClientRect);\nexport const useClientRects = createUseRectsFn(getBoundingClientRect);\nexport const useViewRect = createUseRectFn(getViewRect);\nexport const useLayoutRect = createUseRectFn(getElementLayout);\n\nfunction createUseRectFn<T = LayoutRect, U = HTMLElement>(\n  getRect: RectFn<T, U>\n) {\n  return function useClientRect(\n    element: U | null,\n    forceRecompute?: boolean\n  ): T | null {\n    const previousElement = useRef(element);\n\n    return useLazyMemo<T | null>(\n      (previousValue) => {\n        if (!element) {\n          return null;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && element) ||\n          element !== previousElement.current\n        ) {\n          if (element instanceof HTMLElement && element.parentNode == null) {\n            return null;\n          }\n\n          return getRect(element as U);\n        }\n\n        return previousValue ?? null;\n      },\n      [element, forceRecompute]\n    );\n  };\n}\n\nfunction createUseRectsFn<T = LayoutRect>(getRect: RectFn<T, HTMLElement>) {\n  const defaultValue: T[] = [];\n\n  return function useRects(elements: Element[], forceRecompute?: boolean): T[] {\n    const previousElements = useRef(elements);\n\n    return useLazyMemo<T[]>(\n      (previousValue) => {\n        if (!elements.length) {\n          return defaultValue;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && elements.length) ||\n          elements !== previousElements.current\n        ) {\n          return elements.map((element) => getRect(element as HTMLElement));\n        }\n\n        return previousValue ?? defaultValue;\n      },\n      [elements, forceRecompute]\n    );\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","export class Listeners {\n  private listeners: {\n    eventName: string;\n    handler: EventListenerOrEventListenerObject;\n  }[] = [];\n\n  constructor(private target: EventTarget) {}\n\n  public add(\n    eventName: string,\n    handler: EventListenerOrEventListenerObject,\n    options?: AddEventListenerOptions | false\n  ) {\n    this.target.addEventListener(eventName, handler, options);\n    this.listeners.push({eventName, handler});\n  }\n\n  public removeAll() {\n    this.listeners.forEach(({eventName, handler}) =>\n      this.target.removeEventListener(eventName, handler)\n    );\n  }\n}\n","import {getOwnerDocument} from '../../utilities';\n\nexport function getEventListenerTarget(\n  element: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n  return element instanceof EventTarget ? element : getOwnerDocument(element);\n}\n","import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n} from '@dnd-kit/utilities';\n\nimport {Listeners} from '../utilities';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates} from '../../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\nimport {\n  defaultCoordinates,\n  getBoundingClientRect,\n  getOwnerDocument,\n  getWindow,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private coordinates: Coordinates = defaultCoordinates;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    setTimeout(() => {\n      this.listeners.add('keydown', this.handleKeyDown);\n      this.windowListeners.add('resize', this.handleCancel);\n    });\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n\n    if (!activeNode.node.current) {\n      throw new Error('Active draggable node is undefined');\n    }\n\n    const activeNodeRect = getBoundingClientRect(activeNode.node.current);\n    const coordinates = {\n      x: activeNodeRect.left,\n      y: activeNodeRect.top,\n    };\n\n    this.coordinates = coordinates;\n\n    onStart(coordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (event instanceof KeyboardEvent) {\n      const {coordinates} = this;\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates: coordinates,\n      });\n\n      if (newCoordinates) {\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const coordinatesDelta = getCoordinatesDelta(\n            newCoordinates,\n            coordinates\n          );\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            maxScroll,\n            minScroll,\n          } = getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                scrollContainer.scrollLeft + coordinatesDelta.x <=\n                  maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                scrollContainer.scrollLeft + coordinatesDelta.x >= minScroll.x);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                left: coordinatesDelta.x,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.x =\n              direction === KeyboardCode.Right\n                ? scrollContainer.scrollLeft - maxScroll.x\n                : scrollContainer.scrollLeft - minScroll.x;\n\n            scrollContainer.scrollBy({\n              left: -scrollDelta.x,\n              behavior: scrollBehavior,\n            });\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                scrollContainer.scrollTop + coordinatesDelta.y <=\n                  maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                scrollContainer.scrollTop + coordinatesDelta.y >= minScroll.y);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                top: coordinatesDelta.y,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.y =\n              direction === KeyboardCode.Down\n                ? scrollContainer.scrollTop - maxScroll.y\n                : scrollContainer.scrollTop - minScroll.y;\n\n            scrollContainer.scrollBy({\n              top: -scrollDelta.y,\n              behavior: scrollBehavior,\n            });\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(newCoordinates, scrollDelta)\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n    this.coordinates = coordinates;\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {\n          keyboardCodes = defaultKeyboardCodes,\n          onActivation,\n        }: KeyboardSensorOptions\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {subtract as getCoordinatesDelta} from '@dnd-kit/utilities';\n\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\n\nimport {getEventCoordinates, getOwnerDocument} from '../../utilities';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint = DistanceConstraint | DelayConstraint;\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps = SensorProps<AbstractPointerSensorOptions>;\n\nenum EventName {\n  Keydown = 'keydown',\n}\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private ownerDocument: Document;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n\n    this.props = props;\n    this.events = events;\n    this.ownerDocument = getOwnerDocument(event.target);\n    this.listeners = new Listeners(listenerTarget);\n    this.initialCoordinates = getEventCoordinates(event);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, false);\n    this.listeners.add(events.end.name, this.handleEnd);\n\n    this.ownerDocument.addEventListener(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.ownerDocument.removeEventListener(\n      EventName.Keydown,\n      this.handleKeydown\n    );\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event);\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onEnd} = this.props;\n\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onCancel} = this.props;\n\n    this.detach();\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n}\n","import type {PointerEvent} from 'react';\n\nimport {getOwnerDocument} from '../../utilities';\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {MouseEvent} from 'react';\n\nimport {getOwnerDocument} from '../../utilities';\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  add,\n  Transform,\n  useIsomorphicLayoutEffect,\n  useNodeRef,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  Context,\n  DndContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport type {ViewRect} from '../../types';\nimport {DndMonitorContext, DndMonitorState} from '../../hooks/monitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useLayoutMeasuring,\n  useScrollableAncestors,\n  useClientRect,\n  useClientRects,\n  useScrollOffsets,\n  useViewRect,\n} from '../../hooks/utilities';\nimport type {\n  AutoScrollOptions,\n  LayoutMeasuring,\n  SyntheticListener,\n} from '../../hooks/utilities';\nimport {\n  KeyboardSensor,\n  PointerSensor,\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorHandler,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getRectDelta,\n  getEventCoordinates,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {\n  Active,\n  DroppableContainers,\n  DroppableContainer,\n  DataRef,\n} from '../../store/types';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  screenReaderInstructions as defaultScreenReaderInstructions,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nexport interface Props {\n  id?: string;\n  autoScroll?: boolean | AutoScrollOptions;\n  announcements?: Announcements;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  layoutMeasuring?: Partial<LayoutMeasuring>;\n  modifiers?: Modifiers;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  sensors?: SensorDescriptor<any>[];\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nconst defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nconst defaultData: DataRef = {current: {}};\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nexport const DndContext = memo(function DndContext({\n  id,\n  autoScroll = true,\n  announcements,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  layoutMeasuring,\n  modifiers,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [monitorState, setMonitorState] = useState<DndMonitorState>(() => ({\n    type: null,\n    event: null,\n  }));\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId ? draggableNodes[activeId] : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useRef(props);\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const {\n    layoutRectMap: droppableRects,\n    recomputeLayouts,\n    willRecomputeLayouts,\n  } = useLayoutMeasuring(droppableContainers, {\n    dragging: activeId != null,\n    dependencies: [translate.x, translate.y],\n    config: layoutMeasuring,\n  });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = activatorEvent\n    ? getEventCoordinates(activatorEvent)\n    : null;\n  const activeNodeRect = useViewRect(activeNode);\n  const activeNodeClientRect = useClientRect(activeNode);\n  const initialActiveNodeRectRef = useRef<ViewRect | null>(null);\n  const initialActiveNodeRect = initialActiveNodeRectRef.current;\n  const nodeRectDelta = getRectDelta(activeNodeRect, initialActiveNodeRect);\n  const sensorContext = useRef<SensorContext>({\n    active: null,\n    activeNode,\n    collisionRect: null,\n    droppableRects,\n    draggableNodes,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n    translatedRect: null,\n  });\n  const overNode = getDroppableNode(\n    sensorContext.current.over?.id ?? null,\n    droppableContainers\n  );\n  const windowRect = useClientRect(\n    activeNode ? activeNode.ownerDocument.defaultView : null\n  );\n  const containerNodeRect = useClientRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const scrollableAncestors = useScrollableAncestors(\n    activeId ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useClientRects(scrollableAncestors);\n\n  const [overlayNodeRef, setOverlayNodeRef] = useNodeRef();\n  const overlayNodeRect = useClientRect(\n    activeId ? overlayNodeRef.current : null,\n    willRecomputeLayouts\n  );\n\n  const draggingNodeRect = overlayNodeRect ?? activeNodeClientRect;\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    active,\n    over: sensorContext.current.over,\n    activeNodeRect: activeNodeClientRect,\n    draggingNodeRect,\n    containerNodeRect,\n    overlayNodeRect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollAdjustment = useScrollOffsets(scrollableAncestors);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const translatedRect = activeNodeRect\n    ? getAdjustedRect(activeNodeRect, modifiedTranslate)\n    : null;\n\n  const collisionRect = translatedRect\n    ? getAdjustedRect(translatedRect, scrollAdjustment)\n    : null;\n\n  const overId =\n    active && collisionRect\n      ? collisionDetection(Array.from(droppableRects.entries()), collisionRect)\n      : null;\n  const overContainer = getOver(overId, droppableContainers);\n  const over = useMemo(\n    () =>\n      overContainer && overContainer.rect.current\n        ? {\n            id: overContainer.id,\n            rect: overContainer.rect.current,\n            data: overContainer.data,\n            disabled: overContainer.disabled,\n          }\n        : null,\n    [overContainer]\n  );\n\n  const transform = adjustScale(\n    modifiedTranslate,\n    overContainer?.rect.current ?? null,\n    activeNodeRect\n  );\n\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (!activeRef.current) {\n        return;\n      }\n\n      const activeNode = draggableNodes[activeRef.current];\n\n      if (!activeNode) {\n        return;\n      }\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: event.nativeEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (!id) {\n            return;\n          }\n\n          const node = draggableNodes[id];\n\n          if (!node) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            active: {id, data: node.data, rect: activeRects},\n          };\n\n          dispatch({\n            type: Action.DragStart,\n            initialCoordinates,\n            active: id,\n          });\n          setMonitorState({type: Action.DragStart, event});\n          onDragStart?.(event);\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      setActiveSensor(sensorInstance);\n      setActivatorEvent(event.nativeEvent);\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {active, over, scrollAdjustedTranslate} = sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              active: active,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          dispatch({type});\n          setActiveSensor(null);\n          setActivatorEvent(null);\n\n          if (event) {\n            const {onDragCancel, onDragEnd} = latestProps.current;\n            const handler = type === Action.DragEnd ? onDragEnd : onDragCancel;\n\n            setMonitorState({type, event});\n            handler?.(event);\n          }\n        };\n      }\n    },\n    [dispatch, draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorHandler,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n\n        if (\n          // No active draggable\n          activeRef.current !== null ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        if (handler(event, sensor.options) === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useIsomorphicLayoutEffect(\n    () => {\n      latestProps.current = props;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(props)\n  );\n\n  useEffect(() => {\n    if (!active) {\n      initialActiveNodeRectRef.current = null;\n    }\n\n    if (active && activeNodeRect && !initialActiveNodeRectRef.current) {\n      initialActiveNodeRectRef.current = activeNodeRect;\n    }\n  }, [activeNodeRect, active]);\n\n  useEffect(() => {\n    const {onDragMove} = latestProps.current;\n    const {active, over} = sensorContext.current;\n\n    if (!active) {\n      return;\n    }\n\n    const event: DragMoveEvent = {\n      active,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y,\n      },\n      over,\n    };\n\n    setMonitorState({type: Action.DragMove, event});\n    onDragMove?.(event);\n  }, [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]);\n\n  useEffect(\n    () => {\n      const {active, scrollAdjustedTranslate} = sensorContext.current;\n\n      if (!active || !activeRef.current || !scrollAdjustedTranslate) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const event: DragOverEvent = {\n        active,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      setMonitorState({type: Action.DragOver, event});\n      onDragOver?.(event);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [over?.id]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      active,\n      activeNode,\n      collisionRect,\n      droppableRects,\n      draggableNodes,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate: scrollAdjustedTranslate,\n      translatedRect,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: translatedRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisionRect,\n    draggableNodes,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n    translatedRect,\n  ]);\n\n  useAutoScroller({\n    ...getAutoScrollerOptions(),\n    draggingRect: translatedRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const contextValue = useMemo(() => {\n    const memoizedContext: DndContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activeNodeClientRect,\n      activatorEvent,\n      activators,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      overlayNode: {\n        nodeRef: overlayNodeRef,\n        rect: overlayNodeRect,\n        setRef: setOverlayNodeRef,\n      },\n      containerNodeRect,\n      dispatch,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      recomputeLayouts,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      willRecomputeLayouts,\n      windowRect,\n    };\n\n    return memoizedContext;\n  }, [\n    active,\n    activeNode,\n    activeNodeClientRect,\n    activeNodeRect,\n    activatorEvent,\n    activators,\n    containerNodeRect,\n    overlayNodeRect,\n    overlayNodeRef,\n    dispatch,\n    draggableNodes,\n    draggableDescribedById,\n    droppableContainers,\n    droppableRects,\n    over,\n    recomputeLayouts,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    setOverlayNodeRef,\n    willRecomputeLayouts,\n    windowRect,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={monitorState}>\n      <Context.Provider value={contextValue}>\n        <ActiveDraggableContext.Provider value={transform}>\n          {children}\n        </ActiveDraggableContext.Provider>\n      </Context.Provider>\n      <Accessibility\n        announcements={announcements}\n        hiddenTextDescribedById={draggableDescribedById}\n        screenReaderInstructions={screenReaderInstructions}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n\nfunction getDroppableNode(\n  id: UniqueIdentifier | null,\n  droppableContainers: DroppableContainers\n): HTMLElement | null {\n  return id ? droppableContainers[id]?.node.current ?? null : null;\n}\n\nfunction getOver(\n  id: UniqueIdentifier | null,\n  droppableContainers: DroppableContainers\n): DroppableContainer | null {\n  return id ? droppableContainers[id] ?? null : null;\n}\n","import {createContext, useContext, useEffect, useMemo} from 'react';\nimport {Transform, useNodeRef} from '@dnd-kit/utilities';\n\nimport {Context, Data} from '../store';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {\n  useData,\n  useSyntheticListeners,\n  SyntheticListenerMap,\n} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: string;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    ariaDescribedById,\n    draggableNodes,\n    droppableRects,\n    activators,\n    over,\n  } = useContext(Context);\n  const {role = defaultRole, roleDescription = 'draggable', tabIndex = 0} =\n    attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useData(data);\n\n  useEffect(\n    () => {\n      draggableNodes[id] = {node, data: dataRef};\n\n      return () => {\n        delete draggableNodes[id];\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]\n  );\n\n  return {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    attributes: memoizedAttributes,\n    droppableRects,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    transform,\n  };\n}\n","import {ContextType, useContext} from 'react';\nimport {Context} from '../store';\n\nexport function useDndContext() {\n  return useContext(Context);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof Context>;\n","import {useContext, useEffect, useRef} from 'react';\nimport {useIsomorphicLayoutEffect, useNodeRef} from '@dnd-kit/utilities';\n\nimport {Context, Action, Data} from '../store';\nimport type {LayoutRect} from '../types';\nimport {useData} from './utilities';\n\nexport interface UseDroppableArguments {\n  id: string;\n  disabled?: boolean;\n  data?: Data;\n}\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n}: UseDroppableArguments) {\n  const {active, dispatch, over} = useContext(Context);\n  const rect = useRef<LayoutRect | null>(null);\n  const [nodeRef, setNodeRef] = useNodeRef();\n  const dataRef = useData(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        disabled,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import {useRef} from 'react';\nimport {Transform, useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {ViewRect} from '../../../types';\n\nexport function useDerivedTransform(\n  transform: Transform,\n  rect: ViewRect | null,\n  overlayNode: HTMLElement | null\n) {\n  const prevRect = useRef(rect);\n\n  return useLazyMemo<Transform | undefined>(\n    (previousValue) => {\n      const initial = prevRect.current;\n\n      if (rect !== initial) {\n        if (rect && initial) {\n          const layoutHasChanged =\n            initial.left !== rect.left || initial.top !== rect.top;\n\n          if (layoutHasChanged && !previousValue) {\n            const overlayNodeRect = overlayNode?.getBoundingClientRect();\n\n            if (overlayNodeRect) {\n              const delta = {\n                ...transform,\n                x: overlayNodeRect.left - rect.left,\n                y: overlayNodeRect.top - rect.top,\n              };\n\n              return delta;\n            }\n          }\n        }\n\n        prevRect.current = rect;\n      }\n\n      return undefined;\n    },\n    [rect, transform, overlayNode]\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {CSS, Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {UniqueIdentifier} from '../../../types';\nimport type {DraggableNodes} from '../../../store';\nimport {getViewRect} from '../../../utilities';\n\nexport interface DropAnimation {\n  duration: number;\n  easing: string;\n  dragSourceOpacity?: number;\n}\n\ninterface Arguments {\n  activeId: UniqueIdentifier | null;\n  animate: boolean;\n  adjustScale: boolean;\n  draggableNodes: DraggableNodes;\n  duration: DropAnimation['duration'] | undefined;\n  easing: DropAnimation['easing'] | undefined;\n  dragSourceOpacity: DropAnimation['dragSourceOpacity'] | undefined;\n  node: HTMLElement | null;\n  transform: Transform | undefined;\n}\n\nexport function useDropAnimation({\n  animate,\n  adjustScale,\n  activeId,\n  draggableNodes,\n  duration,\n  easing,\n  dragSourceOpacity,\n  node,\n  transform,\n}: Arguments) {\n  const [dropAnimationComplete, setDropAnimationComplete] = useState(false);\n\n  useEffect(() => {\n    if (!animate || !activeId || !easing || !duration) {\n      if (animate) {\n        setDropAnimationComplete(true);\n      }\n\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      const finalNode = draggableNodes[activeId]?.node.current;\n\n      if (transform && node && finalNode && finalNode.parentNode !== null) {\n        const fromNode = node.children.length > 1 ? node : node.children[0];\n\n        if (fromNode) {\n          const from = fromNode.getBoundingClientRect();\n          const to = getViewRect(finalNode);\n          const delta = {\n            x: from.left - to.left,\n            y: from.top - to.top,\n          };\n\n          if (Math.abs(delta.x) || Math.abs(delta.y)) {\n            const scaleDelta = {\n              scaleX: adjustScale\n                ? (to.width * transform.scaleX) / from.width\n                : 1,\n              scaleY: adjustScale\n                ? (to.height * transform.scaleY) / from.height\n                : 1,\n            };\n            const finalTransform = CSS.Transform.toString({\n              x: transform.x - delta.x,\n              y: transform.y - delta.y,\n              ...scaleDelta,\n            });\n            const originalOpacity = finalNode.style.opacity;\n\n            if (dragSourceOpacity != null) {\n              finalNode.style.opacity = `${dragSourceOpacity}`;\n            }\n\n            const nodeAnimation = node.animate(\n              [\n                {\n                  transform: CSS.Transform.toString(transform),\n                },\n                {\n                  transform: finalTransform,\n                },\n              ],\n              {\n                easing,\n                duration,\n              }\n            );\n\n            nodeAnimation.onfinish = () => {\n              node.style.display = 'none';\n\n              setDropAnimationComplete(true);\n\n              if (finalNode && dragSourceOpacity != null) {\n                finalNode.style.opacity = originalOpacity;\n              }\n            };\n            return;\n          }\n        }\n      }\n\n      setDropAnimationComplete(true);\n    });\n  }, [\n    animate,\n    activeId,\n    adjustScale,\n    draggableNodes,\n    duration,\n    easing,\n    dragSourceOpacity,\n    node,\n    transform,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dropAnimationComplete) {\n      setDropAnimationComplete(false);\n    }\n  }, [dropAnimationComplete]);\n\n  return dropAnimationComplete;\n}\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {CSS} from '@dnd-kit/utilities';\n\nimport {getRelativeTransformOrigin} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport {useDerivedTransform, useDropAnimation, DropAnimation} from './hooks';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  dropAnimation?: DropAnimation | null | undefined;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = activatorEvent instanceof KeyboardEvent;\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nexport const defaultDropAnimation: DropAnimation = {\n  duration: 250,\n  easing: 'ease',\n  dragSourceOpacity: 0,\n};\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation = defaultDropAnimation,\n    style: styleProp,\n    transition = defaultTransition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      active,\n      activeNodeRect,\n      activeNodeClientRect,\n      containerNodeRect,\n      draggableNodes,\n      activatorEvent,\n      over,\n      overlayNode,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const modifiedTransform = applyModifiers(modifiers, {\n      active,\n      activeNodeRect: activeNodeClientRect,\n      draggingNodeRect: overlayNode.rect,\n      containerNodeRect,\n      over,\n      overlayNodeRect: overlayNode.rect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      transform,\n      windowRect,\n    });\n    const derivedTransform = useDerivedTransform(\n      modifiedTransform,\n      activeNodeRect,\n      overlayNode.nodeRef.current\n    );\n    const isDragging = active !== null;\n    const intermediateTransform = derivedTransform ?? modifiedTransform;\n    const finalTransform = adjustScale\n      ? intermediateTransform\n      : {\n          ...intermediateTransform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n    const style: React.CSSProperties | undefined = activeNodeRect\n      ? {\n          position: 'fixed',\n          width: activeNodeRect.width,\n          height: activeNodeRect.height,\n          top: activeNodeRect.top,\n          left: activeNodeRect.left,\n          zIndex,\n          transform: CSS.Transform.toString(finalTransform),\n          touchAction: 'none',\n          transformOrigin:\n            adjustScale && activatorEvent\n              ? getRelativeTransformOrigin(\n                  activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n                  activeNodeRect\n                )\n              : undefined,\n          transition: derivedTransform\n            ? undefined\n            : typeof transition === 'function'\n            ? transition(activatorEvent)\n            : transition,\n          ...styleProp,\n        }\n      : undefined;\n    const attributes = isDragging\n      ? {\n          style,\n          children,\n          className,\n          transform: finalTransform,\n        }\n      : undefined;\n    const attributesSnapshot = useRef(attributes);\n    const derivedAttributes = attributes ?? attributesSnapshot.current;\n    const {children: finalChildren, transform: _, ...otherAttributes} =\n      derivedAttributes ?? {};\n    const prevActiveId = useRef(active?.id ?? null);\n    const dropAnimationComplete = useDropAnimation({\n      animate: Boolean(dropAnimation && prevActiveId.current && !active),\n      adjustScale,\n      activeId: prevActiveId.current,\n      draggableNodes,\n      duration: dropAnimation?.duration,\n      easing: dropAnimation?.easing,\n      dragSourceOpacity: dropAnimation?.dragSourceOpacity,\n      node: overlayNode.nodeRef.current,\n      transform: attributesSnapshot.current?.transform,\n    });\n    const shouldRender = Boolean(\n      finalChildren && (children || (dropAnimation && !dropAnimationComplete))\n    );\n\n    useEffect(() => {\n      if (active?.id !== prevActiveId.current) {\n        prevActiveId.current = active?.id ?? null;\n      }\n\n      if (active && attributesSnapshot.current !== attributes) {\n        attributesSnapshot.current = attributes;\n      }\n    }, [active, attributes]);\n\n    useEffect(() => {\n      if (dropAnimationComplete) {\n        attributesSnapshot.current = undefined;\n      }\n    }, [dropAnimationComplete]);\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return React.createElement(\n      wrapperElement,\n      {\n        ...otherAttributes,\n        ref: overlayNode.setRef,\n      },\n      finalChildren\n    );\n  }\n);\n"],"names":["screenReaderInstructions","draggable","defaultAnnouncements","onDragStart","id","onDragOver","overId","onDragEnd","onDragCancel","Action","getMaxValueIndex","array","getValueIndex","value","tracked","getMinValueIndex","comparator","length","index","i","noop","_args","omit","elements","_","other","Context","createContext","activatorEvent","active","activeNode","activeNodeRect","activeNodeClientRect","activators","ariaDescribedById","containerNodeRect","dispatch","draggableNodes","droppableRects","Map","droppableContainers","over","overlayNode","nodeRef","current","rect","setRef","scrollableAncestors","scrollableAncestorRects","recomputeLayouts","windowRect","willRecomputeLayouts","defaultCoordinates","Object","freeze","x","y","distanceBetween","p1","p2","Math","sqrt","pow","isTouchEvent","event","window","TouchEvent","isMouseEvent","MouseEvent","type","includes","getEventCoordinates","touches","clientX","clientY","changedTouches","getRelativeTransformOrigin","KeyboardEvent","eventCoordinates","transformOrigin","left","width","top","height","centerOfRectangle","offsetLeft","offsetTop","closestCenter","rects","centerRect","distances","map","minValueIndex","adjustScale","transform","rect1","rect2","scaleX","scaleY","getRectDelta","createRectAdjustmentFn","modifier","adjustViewRect","viewRect","adjustments","reduce","acc","adjustment","bottom","right","getAdjustedRect","isScrollable","node","computedStyle","getComputedStyle","overflowRegex","properties","find","property","test","getScrollableAncestors","element","scrollParents","findScrollableAncestors","Document","scrollingElement","push","HTMLElement","SVGElement","parentNode","getScrollableElement","canUseDOM","document","getScrollCoordinates","Window","scrollX","scrollY","scrollLeft","scrollTop","Direction","getScrollPosition","scrollingContainer","minScroll","maxScroll","scrollWidth","clientWidth","scrollHeight","clientHeight","isTop","isLeft","isBottom","isRight","isDocumentScrollingElement","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","finalScrollContainerRect","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","innerWidth","innerHeight","getBoundingClientRect","getScrollOffsets","add","getEdgeOffset","parent","offset","nodeOffset","offsetParent","getElementLayout","offsetWidth","offsetHeight","getViewRect","scrollOffsets","isViewRect","entry","cornersOfRectangle","closestCorners","entries","target","corners","entryCorners","undefined","accumulator","corner","Number","toFixed","getIntersectionRatio","max","min","targetArea","entryArea","intersectionArea","intersectionRatio","rectIntersection","intersections","maxValueIndex","getOwnerDocument","ownerDocument","getWindow","defaultView","getInitialState","initialCoordinates","nodes","translate","droppable","containers","reducer","state","action","DragStart","DragMove","coordinates","DragEnd","DragCancel","RegisterDroppable","SetDroppableDisabled","disabled","UnregisterDroppable","DndMonitorContext","useDndMonitor","onDragMove","monitorState","useContext","previousMonitorState","useRef","useEffect","DragOver","Accessibility","announcements","hiddenTextDescribedById","announce","announcement","useAnnouncement","liveRegionId","useUniqueId","mounted","setMounted","useState","useMemo","createPortal","React","HiddenText","LiveRegion","body","AutoScrollActivator","TraversalOrder","useAutoScroller","activator","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","pointerCoordinates","setAutoScrollInterval","clearAutoScrollInterval","useInterval","scrollSpeed","DraggableRect","scrollDirection","scrollContainerRef","autoScroll","useCallback","scrollBy","sortedScrollableAncestors","reverse","indexOf","scrolllContainerRect","JSON","stringify","useCachedNode","draggableNode","useLazyMemo","cachedNode","useCombineActivators","sensors","getSyntheticHandler","sensor","Sensor","sensorActivators","eventName","handler","useData","data","dataRef","useIsomorphicLayoutEffect","LayoutMeasuringStrategy","LayoutMeasuringFrequency","defaultValue","useLayoutMeasuring","dragging","dependencies","config","setWillRecomputeLayouts","frequency","strategy","getLayoutMeasuring","containersRef","recomputeLayoutsTimeoutId","isDisabled","layoutRectMap","previousValue","container","values","createLayoutRectMap","recompute","requestAnimationFrame","forceRecomputeLayouts","setTimeout","Always","BeforeDragging","set","defaultLayoutMeasuring","WhileDragging","Optimized","layoutMeasuring","useScrollOffsets","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","scrollableElement","addEventListener","passive","filter","forEach","removeEventListener","Array","from","useScrollableAncestors","previousNode","ancestors","useSyntheticListeners","listeners","useClientRect","createUseRectFn","useClientRects","createUseRectsFn","useViewRect","getRect","forceRecompute","previousElement","useRects","useSensor","options","useSensors","Listeners","constructor","removeAll","getEventListenerTarget","EventTarget","hasExceededDistance","delta","measurement","dx","dy","KeyboardCode","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","onStart","Error","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","scrollDelta","coordinatesDelta","getCoordinatesDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","canFullyScrollToNewCoordinates","behavior","handleMove","getAdjustedCoordinates","onMove","preventDefault","onEnd","detach","onCancel","onActivation","nativeEvent","isDistanceConstraint","constraint","Boolean","isDelayConstraint","EventName","AbstractPointerSensor","events","listenerTarget","handleKeydown","activationConstraint","move","name","Keydown","timeoutId","delay","clearTimeout","activated","tolerance","distance","cancelable","PointerSensor","isPrimary","button","MouseButton","MouseSensor","RightClick","TouchSensor","applyModifiers","modifiers","args","defaultSensors","defaultData","ActiveDraggableContext","DndContext","memo","children","collisionDetection","defaultScreenReaderInstructions","store","useReducer","setMonitorState","activeId","activeRects","initial","translated","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","draggableDescribedById","activationCoordinates","initialActiveNodeRectRef","initialActiveNodeRect","nodeRectDelta","sensorContext","collisionRect","draggingNodeRect","scrollAdjustedTranslate","translatedRect","overNode","getDroppableNode","parentElement","overlayNodeRef","setOverlayNodeRef","useNodeRef","overlayNodeRect","modifiedTranslate","scrollAdjustment","overContainer","getOver","instantiateSensor","sensorInstance","createHandler","cancelDrop","shouldCancel","Promise","resolve","bindActivatorToSensorInstantiator","dndKit","defaultPrevented","capturedBy","getAutoScrollerOptions","contextValue","memoizedContext","Provider","activeSensorDisablesAutoscroll","autoScrollEnabled","autoScrollGloballyDisabled","NullContext","defaultRole","useDraggable","attributes","role","roleDescription","tabIndex","isDragging","setNodeRef","memoizedAttributes","useDndContext","useDroppable","isOver","useDerivedTransform","prevRect","layoutHasChanged","useDropAnimation","animate","duration","easing","dragSourceOpacity","dropAnimationComplete","setDropAnimationComplete","finalNode","fromNode","to","scaleDelta","finalTransform","CSS","Transform","toString","originalOpacity","style","opacity","nodeAnimation","onfinish","display","defaultTransition","isKeyboardActivator","defaultDropAnimation","DragOverlay","dropAnimation","styleProp","transition","wrapperElement","className","zIndex","modifiedTransform","derivedTransform","intermediateTransform","position","touchAction","attributesSnapshot","derivedAttributes","finalChildren","otherAttributes","prevActiveId","shouldRender","createElement","ref"],"mappings":"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"}